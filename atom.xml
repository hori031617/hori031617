<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[エンジニア日記]]></title>
  <link href="http://hori031617.github.io/hori031617/atom.xml" rel="self"/>
  <link href="http://hori031617.github.io/hori031617/"/>
  <updated>2016-05-05T10:25:28+09:00</updated>
  <id>http://hori031617.github.io/hori031617/</id>
  <author>
    <name><![CDATA[Masahiro Hori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Angular JS で、APIを非同期でGET呼び出しし、返却されたデータを表示する]]></title>
    <link href="http://hori031617.github.io/hori031617/blog/2016/05/05/angular-js-get-ajax/"/>
    <updated>2016-05-05T08:14:21+09:00</updated>
    <id>http://hori031617.github.io/hori031617/blog/2016/05/05/angular-js-get-ajax</id>
    <content type="html"><![CDATA[<ul>
<li>APIはJSONデータを返却する</li>
<li>JSONデータにはあるグループのグループ名、コメント、登録日が格納されている</li>
<li>返却されたJSONデータを <em>ng-repeat(ループ)</em> で表示する</li>
</ul>


<pre><code>&lt;!doctype html&gt;
  &lt;html lang="ja"&gt;
    &lt;body ng-app="group" ng-cloak&gt;
      &lt;div ng-controller="GroupController"&gt;
        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th&gt;グループ名&lt;/th&gt;
              &lt;th&gt;コメント&lt;/th&gt;
              &lt;th&gt;登録日&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr ng-repeat="group in data.group_list"&gt;
              &lt;td&gt;{group.group_name}&lt;/td&gt;
              &lt;td&gt;{group.comment}&lt;/td&gt;
              &lt;td&gt;{group.regist_date}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/div&gt;
   &lt;!-- Anguler JS 読み込み ここから --&gt;
      &lt;script src="angular.js"&gt;&lt;/script&gt;
      &lt;script src="angular-resource.js"&gt;&lt;/script&gt;
   &lt;!-- Anguler JS 読み込み ここまで --&gt;
      &lt;script&gt;
        var GroupController = function($scope, $resource){

        // GETパラーメータ
        var parameter = {hoge: 'fuga'};

        var group_api = $resource(" APIパス ");

        // 非同期でGET通信
        group_api.get(parameter, function(data){
            $scope.data = data;
        });

        var appModule = angular.module('group', ['ngResource']);
        appModule.controller('GroupController', GroupController);
      &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SwiftのUIColectionViewでセルを均等に配置し、セルとセルの間に罫線を表示する]]></title>
    <link href="http://hori031617.github.io/hori031617/blog/2016/04/30/swift-uicollectionview/"/>
    <updated>2016-04-30T22:33:33+09:00</updated>
    <id>http://hori031617.github.io/hori031617/blog/2016/04/30/swift-uicollectionview</id>
    <content type="html"><![CDATA[<h3>やり方</h3>

<p>罫線は背景色を表示する方法をとる。<br/>
(この例の場合は黒)<br/>
よって、セルとセルの間に均等にスペースが空くように配置する</p>

<h3>イメージ</h3>

<p><img src="http://hori031617.github.io/hori031617/images/UICollectionViewCapture.png" alt="キャプチャ" /></p>

<h3>ソースコード</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class ViewController: UIViewController,UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout {
</span><span class='line'>
</span><span class='line'>    let linePoint: CGFloat = 1     // 罫線の太さ
</span><span class='line'>    let numberOfCols: CGFloat = 6  // 1行に表示するセルの数
</span><span class='line'>
</span><span class='line'>    // セルのレイアウト調整
</span><span class='line'>    func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -&gt; CGSize {
</span><span class='line'>        // セルのサイズ = (端末の横幅 - (罫線の太さ*(1行に表示するセルの個数-1=外の線を引いた内側の線の数))) / 1行に表示するセルの個数
</span><span class='line'>        let size = floor((collectionView.frame.size.width - (linePoint*(numberOfCols-1))) / numberOfCols)
</span><span class='line'>        return CGSizeMake(size, size)
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAtIndex section: Int) -&gt; UIEdgeInsets {
</span><span class='line'>        return UIEdgeInsetsMake(0.0, 0.0, 0.0, 0.0)
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAtIndex section: Int) -&gt; CGFloat {
</span><span class='line'>        return linePoint
</span><span class='line'>    }
</span><span class='line'>    
</span><span class='line'>    ......
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ApacheのアクセスログからURLごと、時間帯別でURLごとにアクセスを集計する]]></title>
    <link href="http://hori031617.github.io/hori031617/blog/2016/04/28/apache-access-log-search/"/>
    <updated>2016-04-28T00:30:01+09:00</updated>
    <id>http://hori031617.github.io/hori031617/blog/2016/04/28/apache-access-log-search</id>
    <content type="html"><![CDATA[<h3>パラメータを除外し、URLごとに集計</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat access.log | awk -F\" '{print $2}' | awk -F' ' '{print $2}' | cut -f1 -d? | sort | uniq -c | sort -n -r &gt; output.txt</span></code></pre></td></tr></table></div></figure>


<h3>時間帯のURLごとに集計</h3>

<p>例) 2016/04/27/ 18:00 台の時間帯にアクセスのあったURLごとの集計</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat access.log | grep '\[27/Apr/2016:18:00:' | awk -F\" '{print $2}' | awk -F' ' '{print $2}' | cut -f1 -d? | sort | uniq -c | sort -n -r &gt; output_1800.txt</span></code></pre></td></tr></table></div></figure>


<h3>その他</h3>

<p>複数あるアクセスログファイルを1つにまとめる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat access1.log access2.log access3.log &gt; total_access.log</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://hori031617.github.io/hori031617/blog/2016/04/24/hello-world/"/>
    <updated>2016-04-24T19:12:54+09:00</updated>
    <id>http://hori031617.github.io/hori031617/blog/2016/04/24/hello-world</id>
    <content type="html"><![CDATA[<h2>My First Blog</h2>

<p>初めての投稿です。<br/>
仕事はWEBエンジニアをやっています。<br/>
趣味でiPhoneアプリ作成もやっています。<br/>
この前、無事に公開されました^^<br/>
これから、日々の開発中にうまくいったこと、うまくいかなかったことなどをまとめる技術ブログとして、どんどん更新していこうと思います。</p>

<p>よろしくお願いします。</p>
]]></content>
  </entry>
  
</feed>
