<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[エンジニア日記]]></title>
  <link href="http://engineer-diary.click/atom.xml" rel="self"/>
  <link href="http://engineer-diary.click/"/>
  <updated>2017-03-07T20:36:42+09:00</updated>
  <id>http://engineer-diary.click/</id>
  <author>
    <name><![CDATA[Masahiro Hori]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macでツールを使わずzipコマンドでディレクトリを圧縮する]]></title>
    <link href="http://engineer-diary.click/blog/2017/03/07/mac-zip-cmd/"/>
    <updated>2017-03-07T20:30:10+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/03/07/mac-zip-cmd</id>
    <content type="html"><![CDATA[<h2>書式</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zip -e -r 【出力zipファイル名】.zip 【圧縮するディレクトリ】</span></code></pre></td></tr></table></div></figure>


<h2>実行例</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zip -e -r HOGE.zip HOGE
</span><span class='line'>Enter password:        ← 解凍パスワード入力
</span><span class='line'>Verify password:       ← 解凍パスワード確認
</span><span class='line'>  adding: HOGE/ (stored 0%)
</span><span class='line'>  adding: HOGE/fuga.pdf (deflated 5%)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel5で論理削除を実装する手順]]></title>
    <link href="http://engineer-diary.click/blog/2017/03/05/laravel5-deleted-at/"/>
    <updated>2017-03-05T18:57:44+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/03/05/laravel5-deleted-at</id>
    <content type="html"><![CDATA[<h2>1. Migrateファイルを作成時、以下のカラムを記述</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$table-&gt;softDeletes();  // deleted_atカラムが追加される</span></code></pre></td></tr></table></div></figure>


<h2>2. Modelに以下を追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use Illuminate\Database\Eloquent\SoftDeletes; // 追加する
</span><span class='line'>
</span><span class='line'>class Hoge extends Model
</span><span class='line'>{
</span><span class='line'>    // 論理削除を有効化
</span><span class='line'>    use SoftDeletes;
</span><span class='line'>    protected $dates = ['deleted_at'];</span></code></pre></td></tr></table></div></figure>


<p>上記1.2の設定で論理削除が有効になる。<br/>
deleted_atに日付が登録されていれば、<br/>
<strong>SELECT文にWHERE句などを記述しなくても、取得されない。</strong></p>

<h2>3. Eloquentでdeleted_at に値を登録</h2>

<h3>通常のdelete文から変更なし</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$fuga = Fuga::findOrFail($id);
</span><span class='line'>$fuga-&gt;delete(); // deleted_at = now()が入って、delete文でカラムは削除されない。</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel5にてjsonを返却するAPIを作成する]]></title>
    <link href="http://engineer-diary.click/blog/2017/02/26/laravel-api/"/>
    <updated>2017-02-26T09:53:18+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/02/26/laravel-api</id>
    <content type="html"><![CDATA[<h2>サンプルコード</h2>

<h3>php artisan make:controller HogeController で雛形を作成したものに処理を追加</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?php
</span><span class='line'>
</span><span class='line'>namespace App\Http\Controllers;
</span><span class='line'>
</span><span class='line'>use Illuminate\Http\Request;
</span><span class='line'>use App\Http\Requests;
</span><span class='line'>
</span><span class='line'>use App\Model\Fuga;
</span><span class='line'>use Response;    // 追加
</span><span class='line'>use Validator;   // 追加
</span><span class='line'>
</span><span class='line'>class HogeController extends Controller
</span><span class='line'>{
</span><span class='line'>    public function getPiyo($id){
</span><span class='line'>
</span><span class='line'>        // 受け取った引数のバリデーションルールを作成
</span><span class='line'>        $validator = Validator::make(['id' =&gt; $id],
</span><span class='line'>                                     ['id' =&gt; 'required|integer']);
</span><span class='line'>
</span><span class='line'>        // バリデーションエラー
</span><span class='line'>        if($validator-&gt;fails()){
</span><span class='line'>            return Response::json([
</span><span class='line'>                                'status' =&gt; 'NG',
</span><span class='line'>                                'message' =&gt; '値が不正です'
</span><span class='line'>                            ]);
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        // DBから値を取得
</span><span class='line'>        $fuga = new Fuga();
</span><span class='line'>        $piyo = $fuga::find($id);
</span><span class='line'>
</span><span class='line'>        // jsonで返却
</span><span class='line'>        return Response::json([
</span><span class='line'>                            'status' =&gt; 'OK',
</span><span class='line'>                            'piyo' =&gt; $piyo
</span><span class='line'>                        ]);
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>ルーティングを設定</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Route::get('get_piyo/{id}', [
</span><span class='line'>  'as'    =&gt; 'get_piyo',
</span><span class='line'>  'uses'  =&gt; 'HogeController@getPiyo'
</span><span class='line'>]);</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQueryでiframeのフレーム内からフレーム外の要素を扱う]]></title>
    <link href="http://engineer-diary.click/blog/2017/02/20/iframe-parent/"/>
    <updated>2017-02-20T20:04:58+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/02/20/iframe-parent</id>
    <content type="html"><![CDATA[<p>セレクタの第２引数に <strong>parent.document</strong> を指定する</p>

<p>例)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$('#parent_id', parent.document).show();</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ELB(443) → EC2(80)のルートを通るときにLaravel5のroute()がhttpとなる問題]]></title>
    <link href="http://engineer-diary.click/blog/2017/01/30/elb-ec2-laravel5/"/>
    <updated>2017-01-30T22:02:58+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/01/30/elb-ec2-laravel5</id>
    <content type="html"><![CDATA[<p>AWS環境にて。<br/>
EC2にLaravel5で作成したプロジェクトがあり、テンプレートのリンク先をLaravelの関数であるroute()にて実装。<br/>
EC2をELBにぶら下げ、ユーザーからのアクセスを ELB(443) → EC2(80) で処理するとき、route()から出力されるプロトコルはhttpとなってしまう。<br/>
これは、Laravelとしては80番でリクエストが来ているため上記の動作となってしまう。</p>

<h2>対応方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app/Providers/AppServiceProvider.php  
</span><span class='line'>public function boot()
</span><span class='line'>{
</span><span class='line'>    // 環境がローカル環境でないとき
</span><span class='line'>    if (!app()-&gt;environment('local')) {
</span><span class='line'>        // すべてのリクエストをhttpsとする
</span><span class='line'>        \URL::forceSchema('https');
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><strong>※ if文の条件は要調整</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux タイムゾーンをJSTに設定する]]></title>
    <link href="http://engineer-diary.click/blog/2017/01/22/linux-date-jst/"/>
    <updated>2017-01-22T09:34:50+09:00</updated>
    <id>http://engineer-diary.click/blog/2017/01/22/linux-date-jst</id>
    <content type="html"><![CDATA[<h2>現在の時刻を確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ date
</span><span class='line'>2017年  1月 22日 日曜日 00:39:55 UTC</span></code></pre></td></tr></table></div></figure>


<h2>タイムゾーンの設定を確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls -l /etc/localtime*
</span><span class='line'>lrwxrwxrwx. 1 root root 25 10月  3 13:47 /etc/localtime -&gt; ../usr/share/zoneinfo/UTC</span></code></pre></td></tr></table></div></figure>


<h2>現在の設定をバックアップ</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo cp /etc/localtime /etc/localtime.org
</span><span class='line'>$ ls -l /etc/localtime*
</span><span class='line'>lrwxrwxrwx. 1 root root  25 10月  3 13:47 /etc/localtime -&gt; ../usr/share/zoneinfo/UTC
</span><span class='line'>-rw-r--r--  1 root root 118  1月 22 00:42 /etc/localtime.org</span></code></pre></td></tr></table></div></figure>


<h2>タイムゾーンをJSTにする</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
</span><span class='line'>$ ls -l /etc/localtime*
</span><span class='line'>lrwxrwxrwx 1 root root  30  1月 22 09:43 /etc/localtime -&gt; /usr/share/zoneinfo/Asia/Tokyo
</span><span class='line'>-rw-r--r-- 1 root root 118  1月 22 09:42 /etc/localtime.org</span></code></pre></td></tr></table></div></figure>


<h2>設定が変わったことを確認</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ date
</span><span class='line'>2017年  1月 22日 日曜日 09:44:39 JST</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel5 artisanコマンドでClass not found エラー]]></title>
    <link href="http://engineer-diary.click/blog/2016/12/29/laravel5-class-not-found/"/>
    <updated>2016-12-29T10:08:41+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/12/29/laravel5-class-not-found</id>
    <content type="html"><![CDATA[<p>下記コマンドを実行、Class not found エラーが出力された。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan migrate:rollback
</span><span class='line'>
</span><span class='line'>[Symfony\Component\Debug\Exception\FatalThrowableError]  
</span><span class='line'>Class 'クラス名' not found</span></code></pre></td></tr></table></div></figure>


<p>これは、クラス名を急に変えたときなどに起こる。<br/>
特に、tableをartisanで作り後からスペルミスなどでクラス名を変えた場合。<br/>
LaravelはAutoLoaderがあり、composerがクラス管理をしており、composerの管轄外でクラス名等を変更すると発生するエラー。<br/>
解決策としては下記コマンドでcomposerにクラス名を変更したと教える。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>composer dump-autoload</span></code></pre></td></tr></table></div></figure>


<p>再度、コマンドを実行しエラーが解消されました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでgitのコマンドやブランチの補完をtabで出来るようにする]]></title>
    <link href="http://engineer-diary.click/blog/2016/12/25/git-auto-completion/"/>
    <updated>2016-12-25T12:29:52+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/12/25/git-auto-completion</id>
    <content type="html"><![CDATA[<h2>brewで「bash-completion」をインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo brew install bash-completion</span></code></pre></td></tr></table></div></figure>


<h2>.bashrc に下記を追加し、再読み込み</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd
</span><span class='line'>
</span><span class='line'>vi .bashrc
</span><span class='line'>
</span><span class='line'>if [ -f $(brew --prefix)/etc/bash_completion ]; then
</span><span class='line'>  . $(brew --prefix)/etc/bash_completion
</span><span class='line'>fi
</span><span class='line'>
</span><span class='line'>source .bashrc</span></code></pre></td></tr></table></div></figure>


<p>tabキーで補完が出来るようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLで文字コードを指定しデータベース作成]]></title>
    <link href="http://engineer-diary.click/blog/2016/12/06/mysql-create-database/"/>
    <updated>2016-12-06T22:30:53+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/12/06/mysql-create-database</id>
    <content type="html"><![CDATA[<h2>文字コード utf8で作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE DATABASE 【データベース名】 DEFAULT CHARACTER SET utf8;</span></code></pre></td></tr></table></div></figure>


<h2>文字コード utf8mb4で作成</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE DATABASE 【データベース名】 DEFAULT CHARACTER SET utf8mb4;</span></code></pre></td></tr></table></div></figure>


<h3>utf8mb4とは</h3>

<ul>
<li>文字コードの一種で、UTF8で4バイト文字を扱う事が出来るもの</li>
<li>絵文字や中国漢字、日本語でも特殊漢字などは4バイトが含まれている</li>
<li>MySQLでは5.5からこのutf8mb4に対応している</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLでアカウント作成とパスワード変更]]></title>
    <link href="http://engineer-diary.click/blog/2016/12/04/mysql-create-account/"/>
    <updated>2016-12-04T16:44:57+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/12/04/mysql-create-account</id>
    <content type="html"><![CDATA[<h3>アカウント作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CREATE USER 'アカウント名'@'localhost' IDENTIFIED BY 'パスワード';</span></code></pre></td></tr></table></div></figure>


<h3>パスワード変更</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SET PASSWORD FOR 'アカウント名'@'localhost' = PASSWORD('新パスワード');</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudWatch Events cronのタイムゾーン]]></title>
    <link href="http://engineer-diary.click/blog/2016/11/12/cloudwatch-events/"/>
    <updated>2016-11-12T19:35:25+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/11/12/cloudwatch-events</id>
    <content type="html"><![CDATA[<p>AWS Lambda で関数を作成し、その関数をCloudWatch Eventsで定期的に実行しようとして、cronを設定したが時間どおりに動作しなかった。</p>

<p>CloudWatch Eventsのトラブルシューティングページを確認すると</p>

<blockquote><p>ScheduleExpressions は UTC です。UTC タイムゾーンで自己トリガーするルールのスケジュールが設定されていることを確認します。</p></blockquote>

<p>とあり、タイムゾーンをUTCで設定する必要があった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ローカルホストとリモートホストをマウント時にエラー]]></title>
    <link href="http://engineer-diary.click/blog/2016/11/03/vagrant-shared-folder-error/"/>
    <updated>2016-11-03T17:29:16+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/11/03/vagrant-shared-folder-error</id>
    <content type="html"><![CDATA[<h2>下記エラーが出力された</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Vagrant was unable to mount VirtualBox shared folders. This is usually
</span><span class='line'>because the filesystem "vboxsf" is not available.</span></code></pre></td></tr></table></div></figure>


<h2>解決方法</h2>

<h3>まず、vagrant up時に自動的に新しいバージョンのGuest Additionsに更新してくれる「vagrant-vbguest」というプラグインをインストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant plugin install vagrant-vbguest</span></code></pre></td></tr></table></div></figure>


<h3>Vagrantが起動している状態でマウント失敗している仮想マシンの状態確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant vbguest --status
</span><span class='line'>
</span><span class='line'>[default] No installation found.</span></code></pre></td></tr></table></div></figure>


<h3>Guest Additionsを更新</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant vbguest</span></code></pre></td></tr></table></div></figure>


<h3>再度仮想マシンの状態確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant vbguest --status
</span><span class='line'>
</span><span class='line'>[default] GuestAdditions 5.1.8 running --- OK.</span></code></pre></td></tr></table></div></figure>


<h3>仮想マシンを再起動</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant reload</span></code></pre></td></tr></table></div></figure>


<p>解決しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrant box add で transfer closed]]></title>
    <link href="http://engineer-diary.click/blog/2016/11/02/vagrant-box-add-error/"/>
    <updated>2016-11-02T20:37:22+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/11/02/vagrant-box-add-error</id>
    <content type="html"><![CDATA[<h2>下記コマンドでboxを追加</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vagrant box add {name} {url}
</span><span class='line'>
</span><span class='line'>vagrant box add centos/7 https://atlas.hashicorp.com/centos/boxes/7</span></code></pre></td></tr></table></div></figure>


<h2>エラーが発生</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>An error occurred while downloading the remote file. The error
</span><span class='line'>message, if any, is reproduced below. Please fix this error and try
</span><span class='line'>again.
</span><span class='line'>
</span><span class='line'>transfer closed with 386379308 bytes remaining to read</span></code></pre></td></tr></table></div></figure>


<h2>解決方法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/.vagrant.d/tmp/
</span><span class='line'>rm *
</span><span class='line'>
</span><span class='line'>再度 vagrant box add 〜 を実行</span></code></pre></td></tr></table></div></figure>


<p>無事にboxを追加できました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[よく使用するartisanコマンド]]></title>
    <link href="http://engineer-diary.click/blog/2016/10/17/laravel-artisan-command/"/>
    <updated>2016-10-17T19:11:46+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/10/17/laravel-artisan-command</id>
    <content type="html"><![CDATA[<h3>コントローラーの雛形を作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan make:controller HogeController</span></code></pre></td></tr></table></div></figure>


<h3>モデルの雛形を作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan make:model Fuga</span></code></pre></td></tr></table></div></figure>


<h3>バッチクラスとコマンドを作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan make:console PiyoCommand --command="piyo_cmd"</span></code></pre></td></tr></table></div></figure>


<h3>バッチコマンドを実行</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app/Console/Kernel.php に
</span><span class='line'>
</span><span class='line'>protected $commands = [
</span><span class='line'>    'App\Console\Commands\InspireCommand',
</span><span class='line'>    'App\Console\Commands\PiyoCommand' // 追加
</span><span class='line'>];
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>php artisan piyo_cmd</span></code></pre></td></tr></table></div></figure>


<h3>テーブルを作成</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan make:migration create_hoge_table --create=hoge</span></code></pre></td></tr></table></div></figure>


<h3>カラムを追加</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan make:migration add_piyo_fuga_table --table=fuga</span></code></pre></td></tr></table></div></figure>


<h3>マイグレーションを実行</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan migrate</span></code></pre></td></tr></table></div></figure>


<h3>実行したマイグレーションをロールバック</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan migrate:rollback</span></code></pre></td></tr></table></div></figure>


<h3>コマンド一覧確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>php artisan list</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidアプリにRealmを使用するため、インストールを行う]]></title>
    <link href="http://engineer-diary.click/blog/2016/09/25/android-realm/"/>
    <updated>2016-09-25T16:36:26+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/09/25/android-realm</id>
    <content type="html"><![CDATA[<h1>Realmとは？</h1>

<p>NoSQL データベースの1つ<br/>
その他に「MongoDB」「Redis」などがある<br/>
モバイル向けのデータベース</p>

<h1>Android Studioからインストールする</h1>

<p>gradleというjavaのパッケージ管理システムを使用する</p>

<h2>インストール手順</h2>

<ul>
<li><a href="https://realm.io/" title="公式サイト">公式サイト</a>より「Java」をクリック</li>
<li>「Getting Started」セクションに記述されている内容を行う

<ul>
<li>Android Studioの左カラム「Gradle Scripts」より ProjectレベルとApplicationレベルのbuild.gradleファイルにRealmをインストールするパスを記述</li>
</ul>
</li>
<li>ツールバーより「Sync Project with Gradle File」を押下</li>
</ul>


<p>エラーがなければイベントログに「Gradle build finished」となる</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel Meetup Tokyo Vol.8に行ってきました 2/2]]></title>
    <link href="http://engineer-diary.click/blog/2016/09/15/laravel-5-3/"/>
    <updated>2016-09-15T06:32:32+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/09/15/laravel-5-3</id>
    <content type="html"><![CDATA[<p>2つ目のセッションの内容はLaravel5.3に搭載された新機能のうち、<br/>
2つを紹介してくれました。</p>

<h1>1. Simple Pagination</h1>

<p>Blade側で指定できるようになり、Paginationに使用する関数を読んであげるだけで良くなった。<br/>
※ 今までは自分でカスタマイズする必要があった.</p>

<h2>Paginnation で使うメソッド</h2>

<ul>
<li>hasPages (ページがあるか？)</li>
<li>onfirstPage (最初のページ)</li>
<li>previousPageUrl (前のページ)</li>
<li>nextPageUrl (次のページ)</li>
<li>hasMorePages (次のページがあるか?)</li>
</ul>


<h1>2. Notification</h1>

<p>通知を行う処理が楽に実装できるようになった。  <br/>
※ 今まではEventを作って自分で実装する必要があった.<br/>
イベント通知の処理は</p>

<ul>
<li>ユーザーが登録された</li>
<li>お問い合わせがあった</li>
</ul>


<p>など</p>

<h2>標準で用意されている通知方法</h2>

<ul>
<li>Mail</li>
<li>Databaase</li>
<li>SMS</li>
<li>Slack</li>
</ul>


<p>セッション資料<br/>
<a href="https://speakerdeck.com/localdisk/about-laravel-5-dot-3">https://speakerdeck.com/localdisk/about-laravel-5-dot-3</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel Meetup Tokyo Vol.8に行ってきました 1/2]]></title>
    <link href="http://engineer-diary.click/blog/2016/09/12/laravel-meetup-tokyo-vol8/"/>
    <updated>2016-09-12T22:49:10+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/09/12/laravel-meetup-tokyo-vol8</id>
    <content type="html"><![CDATA[<p>本日、「Laravel Meetup Tokyo Vol.8」に行ってきました。<br/>
セッションは2つあり、それぞれ内容を2回に分けて簡単にまとめます。<br/>
以下は１つ目のセッションです。<br/>
モジュール、DBのバックアップの大切さ、やり方についてのセッションでした。</p>

<p><br></p>

<h2>Backing up with Laravel</h2>

<p>ある日、いきなりサーバーが壊れた時にバックアップを同じサーバーに置いていると、<br/>
バックアップファイルにアクセスできずに痛い目を見る。<br/>
バックアップの方法は色々ある。</p>

<ul>
<li>bash script

<ul>
<li>自分で実装</li>
</ul>
</li>
<li>Ottomatik.io

<ul>
<li>Backups as a Service</li>
<li>有償</li>
</ul>
</li>
<li>BackupPC

<ul>
<li>無償</li>
<li>設定がやや難しい</li>
</ul>
</li>
</ul>


<h3>Laravelを使うならオススメのプラグイン</h3>

<h4>Laravel Backup</h4>

<p>特徴</p>

<ul>
<li>PHPモジュール(ファイル)、DBのダンプファイルをzipに圧縮して他サーバーやS3に保存できる</li>
<li>バックアップファイルが古いものを削除することができる(Cleanup old backups)</li>
<li>バックアップ失敗、バックアップファイルが随分古い、容量が大きいなどの時に通知を送ることができる(Send Notification)</li>
<li>インストールや設定が簡単</li>
</ul>


<p>ドキュメント<br/>
<a href="https://docs.spatie.be/laravel-backup/v3/introduction">https://docs.spatie.be/laravel-backup/v3/introduction</a></p>

<p>セッション資料<br/>
<a href="https://speakerdeck.com/freekmurze/backing-up-with-laravel-tokyo">https://speakerdeck.com/freekmurze/backing-up-with-laravel-tokyo</a></p>

<p><br></p>

<h2>その他</h2>

<p>その他紹介があったプラグイン</p>

<ul>
<li>Laravel Permission

<ul>
<li>ユーザーに権限や許可を簡単に付与することができる</li>
</ul>
</li>
<li>Laravel Analytics

<ul>
<li>Google Analyticsの情報を取得できる</li>
</ul>
</li>
<li>Laravel Responsecache

<ul>
<li>同じリクエストをキャッシュし、レスポンスを早くする</li>
</ul>
</li>
<li>Laravel Medialibrary

<ul>
<li>画像ファイルなどの情報取得にEloquent Modelの記述形式で情報を取得できるようになる</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLの文字コードを確認]]></title>
    <link href="http://engineer-diary.click/blog/2016/08/17/mysql-char/"/>
    <updated>2016-08-17T22:36:13+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/08/17/mysql-char</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>show variables like "chara%";
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>+--------------------------+----------------------------+
</span><span class='line'>| Variable_name | Value |
</span><span class='line'>+--------------------------+----------------------------+
</span><span class='line'>| character_set_client | utf8 |
</span><span class='line'>| character_set_connection | utf8 |
</span><span class='line'>| character_set_database | utf8 |
</span><span class='line'>| character_set_filesystem | binary |
</span><span class='line'>| character_set_results | utf8 |
</span><span class='line'>| character_set_server | utf8 |
</span><span class='line'>| character_set_system | utf8 |
</span><span class='line'>| character_sets_dir | /usr/share/mysql/charsets/ |
</span><span class='line'>+--------------------------+----------------------------+</span></code></pre></td></tr></table></div></figure>


<p><br></p>

<table>
<thead>
<tr>
<th style="text-align:center;">変数名</th>
<th style="text-align:center;">意味</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">character_set_client</td>
<td style="text-align:center;">クライアント側で発行したsql文はこの文字コードになる</td>
</tr>
<tr>
<td style="text-align:center;">character_set_connection</td>
<td style="text-align:center;">クライアントから受け取った文字をこの文字コードへ変換する</td>
</tr>
<tr>
<td style="text-align:center;">character_set_database</td>
<td style="text-align:center;">現在参照しているDBの文字コード</td>
</tr>
<tr>
<td style="text-align:center;">character_set_results</td>
<td style="text-align:center;">クライアントへ送信する検索結果はこの文字コードになる</td>
</tr>
<tr>
<td style="text-align:center;">character_set_server</td>
<td style="text-align:center;">DB作成時のデフォルトの文字コード</td>
</tr>
<tr>
<td style="text-align:center;">character_set_system</td>
<td style="text-align:center;">システムの使用する文字セットで常にutf8が使用されている</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[javascriptでselectボックスの値を取得する]]></title>
    <link href="http://engineer-diary.click/blog/2016/08/16/javascript-select-value/"/>
    <updated>2016-08-16T20:21:02+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/08/16/javascript-select-value</id>
    <content type="html"><![CDATA[<p>よく忘れるのでメモ。</p>

<h3>取得方法</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>document.フォーム名.セレクト名.value</span></code></pre></td></tr></table></div></figure>


<h3>例)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;form name="frm"&gt;
</span><span class='line'>  &lt;select name="hoge"&gt;
</span><span class='line'>    &lt;option value="a"&gt;A&lt;/option&gt;
</span><span class='line'>    &lt;option value="b"&gt;B&lt;/option&gt;
</span><span class='line'>    &lt;option value="c"&gt;C&lt;/option&gt;
</span><span class='line'>  &lt;/select&gt;
</span><span class='line'>&lt;/form&gt;
</span><span class='line'>
</span><span class='line'>document.frm.hoge.value</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLでユーザーにDB、テーブルに対して権限付与するコマンド]]></title>
    <link href="http://engineer-diary.click/blog/2016/07/13/mysql-authority/"/>
    <updated>2016-07-13T22:51:12+09:00</updated>
    <id>http://engineer-diary.click/blog/2016/07/13/mysql-authority</id>
    <content type="html"><![CDATA[<h3>MySQL DBに移動</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>USE mysql</span></code></pre></td></tr></table></div></figure>


<h3>登録されているユーザーを確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SELECT user, host FROM user;</span></code></pre></td></tr></table></div></figure>


<h3>ユーザーに付与されている権限を確認</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SHOW GRANTS FOR 'ユーザ名'@'ホスト名';</span></code></pre></td></tr></table></div></figure>


<h3>すべての操作権限を指定テーブルに付与</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GRANT ALL PRIVILEGES ON `DB名`.テーブル TO 'ユーザ名'@'ホスト名';</span></code></pre></td></tr></table></div></figure>


<h3>すべての操作権限を対象DBのすべてのテーブルに付与</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GRANT ALL PRIVILEGES ON `DB名`.* TO 'ユーザー名'@'ホスト名';</span></code></pre></td></tr></table></div></figure>


<h3>SELECT、UPDATE、INSERT、DELETE権限指定テーブルに付与</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GRANT SELECT,UPDATE,INSERT,DELETE ON `DB名`.テーブル TO 'ユーザ名'@'ホスト名';</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
